{"version":3,"file":"static/js/116.7724f59c.chunk.js","mappings":"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","sources":["MedicamentoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { jsPDF } from 'jspdf'; // Importa apenas o jsPDF\r\nimport 'jspdf-autotable'; // Importa a extensão para tabelas\r\n\r\nconst MedicamentoForm = React.memo(() => {\r\n  const [nome, setNome] = useState('');\r\n  const [laboratorio, setLaboratorio] = useState('');\r\n  const [tipoServico, setTipoServico] = useState('');\r\n  const [tipoMedicamento, setTipoMedicamento] = useState('');\r\n  const [lote, setLote] = useState('');\r\n  const [quantidade, setQuantidade] = useState('');\r\n  const [dataValidade, setDataValidade] = useState('');\r\n  const [valor, setValor] = useState('');\r\n  const [medicamentos, setMedicamentos] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedMedicamentos = localStorage.getItem('medicamentos');\r\n    if (storedMedicamentos) {\r\n      setMedicamentos(JSON.parse(storedMedicamentos));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return; // Não prossegue se houver erros\r\n    }\r\n\r\n    const medicamento = {\r\n      nome: nome.toUpperCase(),\r\n      laboratorio: laboratorio.toUpperCase(),\r\n      tipoServico: tipoServico.toUpperCase(),\r\n      tipoMedicamento: tipoMedicamento.toUpperCase(),\r\n      lotes: [{ \r\n        lote: lote.toUpperCase(), \r\n        quantidade, \r\n        dataValidade, \r\n        valor: parseFloat(valor.replace(/\\./g, '').replace(',', '.')) \r\n      }],\r\n    };\r\n\r\n    const updatedMedicamentos = editIndex !== null \r\n      ? medicamentos.map((med, index) => (index === editIndex ? medicamento : med)) \r\n      : [...medicamentos, medicamento];\r\n\r\n    setMedicamentos(updatedMedicamentos);\r\n    localStorage.setItem('medicamentos', JSON.stringify(updatedMedicamentos));\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNome('');\r\n    setLaboratorio('');\r\n    setTipoServico('');\r\n    setTipoMedicamento('');\r\n    setLote('');\r\n    setQuantidade('');\r\n    setDataValidade('');\r\n    setValor('');\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const handleValueChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    const numericValue = inputValue.replace(/\\D/g, '');\r\n    const formattedValue = formatCurrency(numericValue / 100);\r\n    setValor(numericValue);\r\n    e.target.value = formattedValue;\r\n  };\r\n\r\n  const formatCurrency = (value) => {\r\n    return new Intl.NumberFormat('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL'\r\n    }).format(value);\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    const medicamento = medicamentos[index];\r\n    setNome(medicamento.nome);\r\n    setLaboratorio(medicamento.laboratorio);\r\n    setTipoServico(medicamento.tipoServico);\r\n    setTipoMedicamento(medicamento.tipoMedicamento);\r\n    setLote(medicamento.lotes[0].lote);\r\n    setQuantidade(medicamento.lotes[0].quantidade);\r\n    setDataValidade(medicamento.lotes[0].dataValidade);\r\n    setValor(formatCurrency(medicamento.lotes[0].valor));\r\n    setEditIndex(index);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const confirmDelete = window.confirm(\"Tem certeza que deseja excluir este medicamento?\");\r\n    if (confirmDelete) {\r\n      const updatedMedicamentos = medicamentos.filter((_, i) => i !== index);\r\n      setMedicamentos(updatedMedicamentos);\r\n      localStorage.setItem('medicamentos', JSON.stringify(updatedMedicamentos));\r\n    }\r\n  };\r\n\r\n  const exportJSON = () => {\r\n    setLoading(true); // Inicia o carregamento\r\n    const dataStr = JSON.stringify(medicamentos, null, 2);\r\n    const blob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'medicamentos.json';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    setLoading(false); // Finaliza o carregamento\r\n  };\r\n\r\n  const importJSON = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      alert(\"Por favor, selecione um arquivo.\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true); // Inicia o carregamento\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.target.result);\r\n        setMedicamentos(data);\r\n        localStorage.setItem('medicamentos', JSON.stringify(data)); // Salva os medicamentos importados no localStorage\r\n      } catch (error) {\r\n        alert(\"Erro ao importar JSON. Verifique o formato do arquivo.\");\r\n      } finally {\r\n        setLoading(false); // Finaliza o carregamento\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const estoque = JSON.parse(localStorage.getItem('medicamentos')) || [];\r\n    const doc = new jsPDF();\r\n\r\n    // Definir margens verticais\r\n    const topMargin = 20; // Margem superior\r\n    const bottomMargin = 20; // Margem inferior\r\n\r\n    let y = topMargin; // Posição inicial Y com margem\r\n    const pageWidth = doc.internal.pageSize.getWidth(); // Largura total da página\r\n\r\n    // Agrupar medicamentos por nome\r\n    const groupedMedicamentos = estoque.reduce((acc, medicamento) => {\r\n        const existing = acc.find(med => med.nome === medicamento.nome);\r\n        if (existing) {\r\n            existing.lotes.push(...medicamento.lotes);\r\n        } else {\r\n            acc.push({ ...medicamento, lotes: [...medicamento.lotes] });\r\n        }\r\n        return acc;\r\n    }, []);\r\n\r\n    groupedMedicamentos.forEach((medicamento) => {\r\n        // Cabeçalho do medicamento\r\n        doc.setFontSize(10);\r\n        const rectHeight = 8; // Altura do retângulo\r\n        const rectY = y; // Posição Y do retângulo\r\n\r\n        // Desenhar o retângulo cinza\r\n        doc.setFillColor(220, 220, 220); // Cor cinza\r\n        doc.rect(0, rectY, pageWidth, rectHeight, 'F'); // Desenha o retângulo\r\n\r\n        // Centralizar o texto à esquerda dentro do retângulo\r\n        doc.setTextColor(0); // Cor do texto (preto)\r\n        const nomeMedicamento = medicamento.nome || '';\r\n        doc.text(nomeMedicamento, 10, rectY + 5); // Adiciona 5 para posicionar o texto no meio do retângulo\r\n\r\n        y += rectHeight + 3; // Ajustar Y para a próxima seção (menos espaço abaixo do retângulo)\r\n\r\n        // Resetar cor do texto e fonte para os lotes\r\n        doc.setFontSize(7);\r\n        let totalQuantidade = 0; // Para somar a quantidade\r\n        let totalValor = 0; // Para somar o valor total\r\n\r\n        medicamento.lotes.forEach((lote) => {\r\n            let x = 10; // Reinicia a posição X para as informações do lote\r\n\r\n            // Verificações para garantir que os valores são válidos\r\n            const loteText = lote.lote || '';\r\n            const validadeText = lote.dataValidade || '';\r\n            const tipoServicoText = medicamento.tipoServico || '';\r\n            const tipoMedicamentoText = medicamento.tipoMedicamento || '';\r\n            const quantidade = Number(lote.quantidade) || 0;\r\n            const valorLote = Number(lote.valor); // Corrigido para dividir por 100 aqui\r\n\r\n            // Calcular o valor total do lote\r\n            const valorTotalLote = valorLote * quantidade;\r\n\r\n            // Desenhar informações centralizadas\r\n            if (loteText) {\r\n                doc.text(`${loteText}`, x, y);\r\n                x += 30; // Atualiza x para a próxima coluna\r\n            }\r\n            if (validadeText) {\r\n                doc.text(`${validadeText}`, x, y);\r\n                x += 30; // Atualiza x para a próxima coluna\r\n            }\r\n            if (tipoServicoText) {\r\n                doc.text(`${tipoServicoText}`, x, y);\r\n                x += 50; // Atualiza x para a próxima coluna\r\n            }\r\n            if (tipoMedicamentoText) {\r\n                doc.text(`${tipoMedicamentoText}`, x, y);\r\n                x += 30; // Atualiza x para a próxima coluna\r\n            }\r\n            doc.text(`${quantidade}`, x, y);\r\n            totalQuantidade += quantidade; // Acumula a quantidade total\r\n            x += 30; // Atualiza x para a próxima coluna\r\n            doc.text(`${formatCurrency(valorTotalLote)}`, x, y); // Centraliza o valor\r\n            totalValor += valorTotalLote; // Acumula o valor total\r\n\r\n            y += 5; // Ajustar posição y para o próximo lote\r\n\r\n            // Verifica se a posição Y ultrapassa a altura da página\r\n            if (y + rectHeight + 3 > doc.internal.pageSize.getHeight() - bottomMargin) {\r\n                doc.addPage(); // Adiciona uma nova página\r\n                y = topMargin; // Reseta a posição Y para o início da nova página\r\n            }\r\n        });\r\n\r\n        // Total de Quantidade e Valor após cada medicamento, alinhado à direita na tabela\r\n        y += 3; // Espaçamento extra antes dos totais\r\n        doc.setFontSize(7);\r\n        doc.text(`Total Quantidade: ${totalQuantidade}`, 10, y); // Total de quantidade\r\n        doc.text(`Total Valor: ${formatCurrency(totalValor)}`, 100, y); // Total de valor\r\n\r\n        y += 5; // Espaçamento extra após cada medicamento\r\n    });\r\n\r\n    // Finalizar o PDF e salvar\r\n    doc.save('estoque_medicamentos.pdf');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!nome) newErrors.nome = \"O nome é obrigatório.\";\r\n    if (!laboratorio) newErrors.laboratorio = \"O laboratório é obrigatório.\";\r\n    if (!tipoServico) newErrors.tipoServico = \"Selecione um tipo de serviço.\";\r\n    if (!tipoMedicamento) newErrors.tipoMedicamento = \"Selecione um tipo de medicamento.\";\r\n    if (!lote) newErrors.lote = \"O lote é obrigatório.\";\r\n    if (!quantidade || quantidade <= 0) newErrors.quantidade = \"A quantidade deve ser maior que zero.\";\r\n    if (!dataValidade) newErrors.dataValidade = \"A data de validade é obrigatória.\";\r\n    if (!valor || valor <= 0) newErrors.valor = \"O valor deve ser maior que zero.\";\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0; // Retorna true se não houver erros\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div className=\"loading-indicator\">Carregando...</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"nome\">Nome</label>\r\n        <input type=\"text\" id=\"nome\" placeholder=\"Nome\" value={nome} onChange={(e) => setNome(e.target.value)} required />\r\n        {errors.nome && <span className=\"error\">{errors.nome}</span>}\r\n        \r\n        <label htmlFor=\"laboratorio\">Laboratório</label>\r\n        <input type=\"text\" id=\"laboratorio\" placeholder=\"Laboratório\" value={laboratorio} onChange={(e) => setLaboratorio(e.target.value)} required />\r\n        {errors.laboratorio && <span className=\"error\">{errors.laboratorio}</span>}\r\n        \r\n        <label htmlFor=\"tipoServico\">Tipo de Serviço</label>\r\n        <select id=\"tipoServico\" value={tipoServico} onChange={(e) => setTipoServico(e.target.value)} required>\r\n          <option value=\"\">Selecione um tipo de serviço...</option>\r\n          <option value=\"ANEMIA FALCIFORME\">ANEMIA FALCIFORME</option>\r\n          <option value=\"ANTIMICROBIANOS\">ANTIMICROBIANOS</option>\r\n          <option value=\"ASSISTÊNCIA FARMACÊUTICA\">ASSISTÊNCIA FARMACÊUTICA</option>\r\n          <option value=\"ASSISTÊNCIA FARMACÊUTICA BÁSICA\">ASSISTÊNCIA FARMACÊUTICA BÁSICA</option>\r\n          <option value=\"DIABETES\">DIABETES</option>\r\n          <option value=\"HIPERTENSÃO\">HIPERTENSÃO</option>\r\n          <option value=\"SAÚDE DA MULHER\">SAÚDE DA MULHER</option>\r\n          <option value=\"SAÚDE MENTAL\">SAÚDE MENTAL</option>\r\n          <option value=\"URGÊNCIA E EMERGÊNCIA\">URGÊNCIA E EMERGÊNCIA</option>\r\n        </select>\r\n        {errors.tipoServico && <span className=\"error\">{errors.tipoServico}</span>}\r\n        \r\n        <label htmlFor=\"tipoMedicamento\">Tipo de Medicamento</label>\r\n        <select id=\"tipoMedicamento\" value={tipoMedicamento} onChange={(e) => setTipoMedicamento(e.target.value)} required>\r\n          <option value=\"\">Selecione um tipo de medicamento...</option>\r\n          <option value=\"ADESIVO\">ADESIVO</option>\r\n          <option value=\"AMPOLA\">AMPOLA</option>\r\n          <option value=\"BISNAGA\">BISNAGA</option>\r\n          <option value=\"CAPSULA\">CAPSULA</option>\r\n          <option value=\"CARTELA\">CARTELA</option>\r\n          <option value=\"COMPRIMIDO\">COMPRIMIDO</option>\r\n          <option value=\"CREME\">CREME</option>\r\n          <option value=\"FRASCO\">FRASCO</option>\r\n          <option value=\"FRASCO AMPOLA\">FRASCO AMPOLA</option>\r\n          <option value=\"GEL\">GEL</option>\r\n          <option value=\"GOTAS\">GOTAS</option>\r\n          <option value=\"POMADA\">POMADA</option>\r\n          <option value=\"SPRAY\">SPRAY</option>\r\n          <option value=\"SUPOSITÓRIO\">SUPOSITÓRIO</option>\r\n          <option value=\"XAROPE\">XAROPE</option>\r\n        </select>\r\n        {errors.tipoMedicamento && <span className=\"error\">{errors.tipoMedicamento}</span>}\r\n        \r\n        <label htmlFor=\"lote\">Lote</label>\r\n        <input type=\"text\" id=\"lote\" placeholder=\"Lote\" value={lote} onChange={(e) => setLote(e.target.value)} required />\r\n        {errors.lote && <span className=\"error\">{errors.lote}</span>}\r\n        \r\n        <label htmlFor=\"quantidade\">Quantidade</label>\r\n        <input type=\"number\" id=\"quantidade\" placeholder=\"Quantidade\" value={quantidade} onChange={(e) => setQuantidade(e.target.value)} required />\r\n        {errors.quantidade && <span className=\"error\">{errors.quantidade}</span>}\r\n        \r\n        <label htmlFor=\"dataValidade\">Data de Validade</label>\r\n        <input type=\"date\" id=\"dataValidade\" placeholder=\"Data de Validade\" value={dataValidade} onChange={(e) => setDataValidade(e.target.value)} required />\r\n        {errors.dataValidade && <span className=\"error\">{errors.dataValidade}</span>}\r\n        \r\n        <label htmlFor=\"valor\">Valor</label>\r\n        <input type=\"text\" id=\"valor\" placeholder=\"Valor\" value={formatCurrency(valor / 100)} onChange={handleValueChange} required />\r\n        {errors.valor && <span className=\"error\">{errors.valor}</span>}\r\n        \r\n        <button type=\"submit\">{editIndex !== null ? 'Atualizar Medicamento' : 'Adicionar Medicamento'}</button>\r\n      </form>\r\n\r\n      {/* Campo de busca */}\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar Medicamento\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"search-input\" // Adiciona a classe de estilo\r\n        />\r\n        <button className=\"search-button\" onClick={() => {/* Ação de busca, se necessário */}}>\r\n          Buscar\r\n        </button>\r\n      </div>\r\n\r\n      {/* Botões de Exportação e Importação */}\r\n      <div className=\"export-buttons\">\r\n        <button onClick={exportJSON}>Exportar Medicamentos</button>\r\n        <input type=\"file\" accept=\".json\" onChange={importJSON} style={{ display: 'none' }} id=\"file-input\" />\r\n        <button onClick={() => document.getElementById('file-input').click()} className=\"import-button\">Importar Medicamentos</button>\r\n        <button onClick={exportToPDF}>Exportar PDF</button> {/* Botão para exportar PDF */}\r\n      </div>\r\n\r\n      {/* Tabela para exibir os medicamentos */}\r\n      <div id=\"estoque\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>Laboratório</th>\r\n              <th>Tipo de Serviço</th>\r\n              <th>Tipo de Medicamento</th>\r\n              <th>Lote</th>\r\n              <th>Quantidade</th>\r\n              <th>Data de Validade</th>\r\n              <th>Valor</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {medicamentos && medicamentos.length > 0 ? (\r\n              medicamentos\r\n                .filter((medicamento) =>\r\n                  medicamento.nome.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                  medicamento.laboratorio.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                  medicamento.tipoServico.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                  medicamento.tipoMedicamento.toLowerCase().includes(searchTerm.toLowerCase())\r\n                )\r\n                .sort((a, b) => a.nome.localeCompare(b.nome)) // Ordena os medicamentos em ordem alfabética\r\n                .map((medicamento, index) => (\r\n                  <tr key={index}>\r\n                    <td>{medicamento.nome}</td>\r\n                    <td>{medicamento.laboratorio || 'N/A'}</td>\r\n                    <td>{medicamento.tipoServico || 'N/A'}</td>\r\n                    <td>{medicamento.tipoMedicamento || 'N/A'}</td>\r\n                    <td>{medicamento.lotes.map(lote => lote.lote).join(', ')}</td>\r\n                    <td>{medicamento.lotes.map(lote => lote.quantidade).join(', ')}</td>\r\n                    <td>{medicamento.lotes.map(lote => lote.dataValidade).join(', ')}</td>\r\n                    <td>{medicamento.lotes.map(lote => formatCurrency(lote.valor)).join(', ')}</td>\r\n                    <td>\r\n                      <button onClick={() => handleEdit(index)}>Editar</button>\r\n                      <button onClick={() => handleDelete(index)}>Excluir</button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"9\">Nenhum medicamento encontrado.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MedicamentoForm;\r\n"],"names":["React","nome","setNome","useState","laboratorio","setLaboratorio","tipoServico","setTipoServico","tipoMedicamento","setTipoMedicamento","lote","setLote","quantidade","setQuantidade","dataValidade","setDataValidade","valor","setValor","medicamentos","setMedicamentos","editIndex","setEditIndex","searchTerm","setSearchTerm","errors","setErrors","loading","setLoading","useEffect","storedMedicamentos","localStorage","getItem","JSON","parse","resetForm","formatCurrency","value","Intl","NumberFormat","style","currency","format","validateForm","newErrors","Object","keys","length","_jsxs","children","_jsx","className","onSubmit","e","preventDefault","medicamento","toUpperCase","lotes","parseFloat","replace","updatedMedicamentos","map","med","index","setItem","stringify","htmlFor","type","id","placeholder","onChange","target","required","numericValue","formattedValue","display","justifyContent","alignItems","marginBottom","onClick","exportJSON","dataStr","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","accept","file","files","alert","reader","FileReader","onload","event","data","result","error","readAsText","getElementById","exportToPDF","estoque","doc","jsPDF","y","pageWidth","internal","pageSize","getWidth","reduce","acc","existing","find","push","forEach","setFontSize","rectY","setFillColor","rect","setTextColor","nomeMedicamento","text","rectHeight","totalQuantidade","totalValor","x","loteText","validadeText","tipoServicoText","tipoMedicamentoText","Number","valorTotalLote","getHeight","addPage","save","filter","toLowerCase","includes","sort","b","localeCompare","join","handleEdit","window","confirm","_","i","handleDelete","colSpan"],"sourceRoot":""}