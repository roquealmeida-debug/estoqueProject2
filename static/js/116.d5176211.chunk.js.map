{"version":3,"file":"static/js/116.d5176211.chunk.js","mappings":"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","sources":["MedicamentoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable'; // Importa a extensÃ£o para tabelas\r\n\r\nconst MedicamentoForm = React.memo(() => {\r\n  const [nome, setNome] = useState('');\r\n  const [laboratorio, setLaboratorio] = useState('');\r\n  const [tipoServico, setTipoServico] = useState('');\r\n  const [tipoMedicamento, setTipoMedicamento] = useState('');\r\n  const [lote, setLote] = useState('');\r\n  const [quantidade, setQuantidade] = useState('');\r\n  const [dataValidade, setDataValidade] = useState('');\r\n  const [valor, setValor] = useState('');\r\n  const [medicamentos, setMedicamentos] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedMedicamentos = localStorage.getItem('medicamentos');\r\n    if (storedMedicamentos) {\r\n      setMedicamentos(JSON.parse(storedMedicamentos));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return; // NÃ£o prossegue se houver erros\r\n    }\r\n\r\n    const medicamento = {\r\n      nome: nome.toUpperCase(),\r\n      laboratorio: laboratorio.toUpperCase(),\r\n      tipoServico: tipoServico.toUpperCase(),\r\n      tipoMedicamento: tipoMedicamento.toUpperCase(),\r\n      lotes: [{ \r\n        lote: lote.toUpperCase(), \r\n        quantidade, \r\n        dataValidade, \r\n        valor: parseFloat(valor.replace(/\\./g, '').replace(',', '.')) \r\n      }],\r\n    };\r\n\r\n    const updatedMedicamentos = editIndex !== null \r\n      ? medicamentos.map((med, index) => (index === editIndex ? medicamento : med)) \r\n      : [...medicamentos, medicamento];\r\n\r\n    setMedicamentos(updatedMedicamentos);\r\n    localStorage.setItem('medicamentos', JSON.stringify(updatedMedicamentos));\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNome('');\r\n    setLaboratorio('');\r\n    setTipoServico('');\r\n    setTipoMedicamento('');\r\n    setLote('');\r\n    setQuantidade('');\r\n    setDataValidade('');\r\n    setValor('');\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const handleValueChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    const numericValue = inputValue.replace(/\\D/g, '');\r\n    const formattedValue = formatCurrency(numericValue / 100);\r\n    setValor(numericValue);\r\n    e.target.value = formattedValue;\r\n  };\r\n\r\n  const formatCurrency = (value) => {\r\n    return new Intl.NumberFormat('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL'\r\n    }).format(value);\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    const medicamento = medicamentos[index];\r\n    setNome(medicamento.nome);\r\n    setLaboratorio(medicamento.laboratorio);\r\n    setTipoServico(medicamento.tipoServico);\r\n    setTipoMedicamento(medicamento.tipoMedicamento);\r\n    setLote(medicamento.lotes[0].lote);\r\n    setQuantidade(medicamento.lotes[0].quantidade);\r\n    setDataValidade(medicamento.lotes[0].dataValidade);\r\n    setValor(formatCurrency(medicamento.lotes[0].valor));\r\n    setEditIndex(index);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const confirmDelete = window.confirm(\"Tem certeza que deseja excluir este medicamento?\");\r\n    if (confirmDelete) {\r\n      const updatedMedicamentos = medicamentos.filter((_, i) => i !== index);\r\n      setMedicamentos(updatedMedicamentos);\r\n      localStorage.setItem('medicamentos', JSON.stringify(updatedMedicamentos));\r\n    }\r\n  };\r\n\r\n  const exportJSON = () => {\r\n    setLoading(true); // Inicia o carregamento\r\n    const dataStr = JSON.stringify(medicamentos, null, 2);\r\n    const blob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'medicamentos.json';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    setLoading(false); // Finaliza o carregamento\r\n  };\r\n\r\n  const importJSON = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      alert(\"Por favor, selecione um arquivo.\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true); // Inicia o carregamento\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.target.result);\r\n        setMedicamentos(data);\r\n      } catch (error) {\r\n        alert(\"Erro ao importar JSON. Verifique o formato do arquivo.\");\r\n      } finally {\r\n        setLoading(false); // Finaliza o carregamento\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const estoque = JSON.parse(localStorage.getItem('medicamentos')) || [];\r\n    const doc = new jsPDF();\r\n\r\n    // Definir larguras fixas para cada coluna\r\n    const colWidths = {\r\n      lote: 20,\r\n      validade: 30,\r\n      tipoServico: 25,\r\n      tipoMedicamento: 30,\r\n      quantidade: 20,\r\n      valor: 30,\r\n      laboratorio: 40,\r\n    };\r\n\r\n    let y = 20; // PosiÃ§Ã£o inicial Y\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const leftMargin = 10; // Margem esquerda\r\n\r\n    // TÃ­tulos\r\n    doc.setFontSize(10);\r\n    doc.text('Controle de Estoque de Medicamentos', pageWidth / 2, y, { align: 'center' });\r\n    y += 6; // EspaÃ§o reduzido apÃ³s o tÃ­tulo\r\n    doc.setFontSize(9);\r\n    doc.text(`Data: ${new Date().toLocaleDateString()}`, pageWidth / 2, y, { align: 'center' });\r\n    y += 10; // EspaÃ§o apÃ³s a data\r\n\r\n    estoque.forEach((medicamento) => {\r\n      // CabeÃ§alho do medicamento\r\n      doc.setFontSize(10);\r\n      const rectHeight = 8; // Altura do retÃ¢ngulo\r\n      const rectY = y; // PosiÃ§Ã£o Y do retÃ¢ngulo\r\n\r\n      // Desenhar o retÃ¢ngulo cinza\r\n      doc.setFillColor(220, 220, 220); // Cor cinza\r\n      doc.rect(0, rectY, pageWidth, rectHeight, 'F'); // Desenha o retÃ¢ngulo\r\n\r\n      // Centralizar o texto Ã  esquerda dentro do retÃ¢ngulo\r\n      doc.setTextColor(0); // Cor do texto (preto)\r\n      const nomeMedicamento = medicamento.nome || '';\r\n      doc.text(nomeMedicamento, leftMargin, rectY + 5); // Adiciona 5 para posicionar o texto no meio do retÃ¢ngulo\r\n\r\n      y += rectHeight + 3; // Ajustar Y para a prÃ³xima seÃ§Ã£o (menos espaÃ§o abaixo do retÃ¢ngulo)\r\n\r\n      // Resetar cor do texto e fonte para os lotes\r\n      doc.setFontSize(7);\r\n      let totalQuantidade = 0; // Para somar a quantidade\r\n      let totalValor = 0; // Para somar o valor total\r\n\r\n      medicamento.lotes.forEach((lote) => {\r\n        let x = leftMargin; // Reinicia a posiÃ§Ã£o X para as informaÃ§Ãµes do lote\r\n\r\n        // VerificaÃ§Ãµes para garantir que os valores sÃ£o vÃ¡lidos\r\n        const loteText = lote.lote || '';\r\n        const validadeText = lote.dataValidade || '';\r\n        const tipoServicoText = medicamento.tipoServico || '';\r\n        const tipoMedicamentoText = medicamento.tipoMedicamento || '';\r\n        const quantidade = Number(lote.quantidade) || 0;\r\n        const valorLote = Number(lote.valor) || 0;\r\n        const laboratorioText = medicamento.laboratorio || '';\r\n\r\n        // Desenhar informaÃ§Ãµes centralizadas\r\n        if (loteText) {\r\n          const loteLines = doc.splitTextToSize(loteText, colWidths.lote);\r\n          loteLines.forEach((line, index) => {\r\n            const centerX = x + (colWidths.lote / 2);\r\n            doc.text(line, centerX, y + (index * 5), { align: 'center' }); // Centraliza o texto\r\n          });\r\n        }\r\n        x += colWidths.lote; // Atualiza x para a prÃ³xima coluna\r\n\r\n        if (validadeText) {\r\n          const validadeLines = doc.splitTextToSize(validadeText, colWidths.validade);\r\n          validadeLines.forEach((line, index) => {\r\n            const centerX = x + (colWidths.validade / 2);\r\n            doc.text(line, centerX, y + (index * 5), { align: 'center' });\r\n          });\r\n        }\r\n        x += colWidths.validade; // Atualiza x para a prÃ³xima coluna\r\n\r\n        // Renderizar tipo de serviÃ§o\r\n        if (tipoServicoText) {\r\n          const tipoServicoLines = doc.splitTextToSize(tipoServicoText, colWidths.tipoServico);\r\n          tipoServicoLines.forEach((line, index) => {\r\n            const centerX = x + (colWidths.tipoServico / 2);\r\n            doc.text(line, centerX, y + (index * 5), { align: 'center' });\r\n          });\r\n        }\r\n        x += colWidths.tipoServico; // Atualiza x para a prÃ³xima coluna\r\n\r\n        // Renderizar tipo de medicamento\r\n        if (tipoMedicamentoText) {\r\n          const tipoMedicamentoLines = doc.splitTextToSize(tipoMedicamentoText, colWidths.tipoMedicamento);\r\n          tipoMedicamentoLines.forEach((line, index) => {\r\n            const centerX = x + (colWidths.tipoMedicamento / 2);\r\n            doc.text(line, centerX, y + (index * 5), { align: 'center' });\r\n          });\r\n        }\r\n        x += colWidths.tipoMedicamento; // Atualiza x para a prÃ³xima coluna\r\n\r\n        // A quantidade agora Ã© tratada como um nÃºmero\r\n        const centerXQuantidade = x + (colWidths.quantidade / 2);\r\n        doc.text(quantidade.toString(), centerXQuantidade, y); // Centraliza a quantidade\r\n        totalQuantidade += quantidade; // Acumula a quantidade total\r\n        x += colWidths.quantidade; // Atualiza x para a prÃ³xima coluna\r\n\r\n        // O valor do lote agora Ã© tratado corretamente como nÃºmero\r\n        const centerXValor = x + (colWidths.valor / 2);\r\n        doc.text(formatCurrency(valorLote), centerXValor, y); // Centraliza o valor\r\n        totalValor += valorLote; // Acumula o valor total\r\n        x += colWidths.valor; // Atualiza x para a prÃ³xima coluna\r\n\r\n        // Quebrar texto em vÃ¡rias linhas para o laboratÃ³rio\r\n        if (laboratorioText) {\r\n          const laboratorioLines = doc.splitTextToSize(laboratorioText, colWidths.laboratorio);\r\n          laboratorioLines.forEach((line, index) => {\r\n            const centerX = x + (colWidths.laboratorio / 2);\r\n            doc.text(line, centerX, y + (index * 5), { align: 'center' });\r\n          });\r\n        }\r\n\r\n        // Ajustar a posiÃ§Ã£o Y\r\n        y += 3; // Ajustar posiÃ§Ã£o y conforme o nÃºmero de linhas mais longo\r\n        y += 3; // EspaÃ§amento extra apÃ³s cada lote\r\n      });\r\n\r\n      // Total de Quantidade e Valor apÃ³s cada medicamento, alinhado Ã  direita na tabela\r\n      y += 3; // EspaÃ§amento extra antes dos totais\r\n      const totalX = leftMargin + colWidths.lote + colWidths.validade + colWidths.tipoServico + 5; // X para o total\r\n\r\n      doc.setFontSize(7);\r\n      // Centralizar o texto \"Total\"\r\n      const totalText = `Total:`;\r\n      const totalTextWidth = doc.getTextWidth(totalText);\r\n      doc.text(totalText, totalX + (colWidths.tipoServico / 2) - (totalTextWidth / 2), y); // Centraliza o texto \"Total\"\r\n\r\n      // Alinhar quantidade total\r\n      const quantidadeX = totalX + (colWidths.tipoServico + 10);\r\n      doc.text(`${totalQuantidade}`, quantidadeX, y); // Centraliza a quantidade total\r\n\r\n      // Alinhar valor total\r\n      const valorX = totalX + (colWidths.tipoServico + 35);\r\n      doc.text(`${formatCurrency(totalValor)}`, valorX, y); // Centraliza o valor total\r\n\r\n      y += 5; // EspaÃ§amento extra apÃ³s cada medicamento\r\n    });\r\n\r\n    // Finalizar o PDF e salvar\r\n    doc.save('estoque_medicamentos.pdf');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!nome) newErrors.nome = \"O nome Ã© obrigatÃ³rio.\";\r\n    if (!laboratorio) newErrors.laboratorio = \"O laboratÃ³rio Ã© obrigatÃ³rio.\";\r\n    if (!tipoServico) newErrors.tipoServico = \"Selecione um tipo de serviÃ§o.\";\r\n    if (!tipoMedicamento) newErrors.tipoMedicamento = \"Selecione um tipo de medicamento.\";\r\n    if (!lote) newErrors.lote = \"O lote Ã© obrigatÃ³rio.\";\r\n    if (!quantidade || quantidade <= 0) newErrors.quantidade = \"A quantidade deve ser maior que zero.\";\r\n    if (!dataValidade) newErrors.dataValidade = \"A data de validade Ã© obrigatÃ³ria.\";\r\n    if (!valor || valor <= 0) newErrors.valor = \"O valor deve ser maior que zero.\";\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0; // Retorna true se nÃ£o houver erros\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div className=\"loading-indicator\">Carregando...</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Nome\" value={nome} onChange={(e) => setNome(e.target.value)} required />\r\n        {errors.nome && <span className=\"error\">{errors.nome}</span>}\r\n        \r\n        <input type=\"text\" placeholder=\"LaboratÃ³rio\" value={laboratorio} onChange={(e) => setLaboratorio(e.target.value)} required />\r\n        {errors.laboratorio && <span className=\"error\">{errors.laboratorio}</span>}\r\n        \r\n        <select value={tipoServico} onChange={(e) => setTipoServico(e.target.value)} required>\r\n          <option value=\"\">Selecione um tipo de serviÃ§o...</option>\r\n          <option value=\"ANEMIA FALCIFORME\">ANEMIA FALCIFORME</option>\r\n          <option value=\"ANTIMICROBIANOS\">ANTIMICROBIANOS</option>\r\n        </select>\r\n        {errors.tipoServico && <span className=\"error\">{errors.tipoServico}</span>}\r\n        \r\n        <select value={tipoMedicamento} onChange={(e) => setTipoMedicamento(e.target.value)} required>\r\n          <option value=\"\">Selecione um tipo de medicamento...</option>\r\n          <option value=\"ADESIVO\">ADESIVO</option>\r\n          <option value=\"AMPOLA\">AMPOLA</option>\r\n        </select>\r\n        {errors.tipoMedicamento && <span className=\"error\">{errors.tipoMedicamento}</span>}\r\n        \r\n        <input type=\"text\" placeholder=\"Lote\" value={lote} onChange={(e) => setLote(e.target.value)} required />\r\n        {errors.lote && <span className=\"error\">{errors.lote}</span>}\r\n        \r\n        <input type=\"number\" placeholder=\"Quantidade\" value={quantidade} onChange={(e) => setQuantidade(e.target.value)} required />\r\n        {errors.quantidade && <span className=\"error\">{errors.quantidade}</span>}\r\n        \r\n        <input type=\"date\" placeholder=\"Data de Validade\" value={dataValidade} onChange={(e) => setDataValidade(e.target.value)} required />\r\n        {errors.dataValidade && <span className=\"error\">{errors.dataValidade}</span>}\r\n        \r\n        <input type=\"text\" placeholder=\"Valor\" value={formatCurrency(valor / 100)} onChange={handleValueChange} required />\r\n        {errors.valor && <span className=\"error\">{errors.valor}</span>}\r\n        \r\n        <button type=\"submit\">{editIndex !== null ? 'Atualizar Medicamento' : 'Adicionar Medicamento'}</button>\r\n      </form>\r\n\r\n      {/* Campo de busca */}\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar Medicamento\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"search-input\" // Adiciona a classe de estilo\r\n        />\r\n        <button className=\"search-button\" onClick={() => {/* AÃ§Ã£o de busca, se necessÃ¡rio */}}>\r\n          Buscar\r\n        </button>\r\n      </div>\r\n\r\n      {/* BotÃµes de ExportaÃ§Ã£o e ImportaÃ§Ã£o */}\r\n      <div className=\"export-buttons\">\r\n        <button onClick={exportJSON}>Exportar Medicamentos</button>\r\n        <input type=\"file\" accept=\".json\" onChange={importJSON} style={{ display: 'none' }} id=\"file-input\" />\r\n        <button onClick={() => document.getElementById('file-input').click()} className=\"import-button\">Importar Medicamentos</button>\r\n        <button onClick={exportToPDF}>Exportar PDF</button> {/* BotÃ£o para exportar PDF */}\r\n      </div>\r\n\r\n      {/* Tabela para exibir os medicamentos */}\r\n      <div id=\"estoque\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>LaboratÃ³rio</th>\r\n              <th>Tipo de ServiÃ§o</th>\r\n              <th>Tipo de Medicamento</th>\r\n              <th>Lote</th>\r\n              <th>Quantidade</th>\r\n              <th>Data de Validade</th>\r\n              <th>Valor</th>\r\n              <th>AÃ§Ãµes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {medicamentos && medicamentos.length > 0 ? (\r\n              medicamentos\r\n                .filter((medicamento) =>\r\n                  medicamento.nome.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                  medicamento.laboratorio.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                  medicamento.tipoServico.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                  medicamento.tipoMedicamento.toLowerCase().includes(searchTerm.toLowerCase())\r\n                )\r\n                .map((medicamento, index) => (\r\n                  <tr key={index}>\r\n                    <td>{medicamento.nome}</td>\r\n                    <td>{medicamento.laboratorio || 'N/A'}</td>\r\n                    <td>{medicamento.tipoServico || 'N/A'}</td>\r\n                    <td>{medicamento.tipoMedicamento || 'N/A'}</td>\r\n                    <td>{medicamento.lotes.map(lote => lote.lote).join(', ')}</td>\r\n                    <td>{medicamento.lotes.map(lote => lote.quantidade).join(', ')}</td>\r\n                    <td>{medicamento.lotes.map(lote => lote.dataValidade).join(', ')}</td>\r\n                    <td>{medicamento.lotes.map(lote => formatCurrency(lote.valor)).join(', ')}</td>\r\n                    <td>\r\n                      <button onClick={() => handleEdit(index)}>Editar</button>\r\n                      <button onClick={() => handleDelete(index)}>Excluir</button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"9\">Nenhum medicamento encontrado.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MedicamentoForm;\r\n"],"names":["React","nome","setNome","useState","laboratorio","setLaboratorio","tipoServico","setTipoServico","tipoMedicamento","setTipoMedicamento","lote","setLote","quantidade","setQuantidade","dataValidade","setDataValidade","valor","setValor","medicamentos","setMedicamentos","editIndex","setEditIndex","searchTerm","setSearchTerm","errors","setErrors","loading","setLoading","useEffect","storedMedicamentos","localStorage","getItem","JSON","parse","resetForm","formatCurrency","value","Intl","NumberFormat","style","currency","format","validateForm","newErrors","Object","keys","length","_jsxs","children","_jsx","className","onSubmit","e","preventDefault","medicamento","toUpperCase","lotes","parseFloat","replace","updatedMedicamentos","map","med","index","setItem","stringify","type","placeholder","onChange","target","required","numericValue","formattedValue","display","justifyContent","alignItems","marginBottom","onClick","exportJSON","dataStr","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","accept","file","files","alert","reader","FileReader","onload","event","data","result","error","readAsText","id","getElementById","exportToPDF","estoque","doc","jsPDF","colWidths","y","pageWidth","internal","pageSize","getWidth","setFontSize","text","align","Date","toLocaleDateString","forEach","rectY","setFillColor","rect","setTextColor","nomeMedicamento","rectHeight","totalQuantidade","totalValor","x","loteText","validadeText","tipoServicoText","tipoMedicamentoText","Number","valorLote","laboratorioText","splitTextToSize","line","centerX","centerXQuantidade","toString","centerXValor","totalX","totalText","totalTextWidth","getTextWidth","quantidadeX","valorX","save","filter","toLowerCase","includes","join","handleEdit","window","confirm","_","i","handleDelete","colSpan"],"sourceRoot":""}